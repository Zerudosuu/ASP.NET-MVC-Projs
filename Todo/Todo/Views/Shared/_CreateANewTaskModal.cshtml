@model Todo.Models.TodoTask

<!-- Modal -->
<div class="modal fade" id="todoModal" tabindex="-1" aria-labelledby="todoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="todoModalLabel">Add / Edit Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Save", "Todo", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.Id)

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Title, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Enter task title" })
                        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3, placeholder = "Enter task description" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.CreatedAt, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.CreatedAt, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control", type = "datetime-local" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.DueDate, new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.DueDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Status, new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.Status, new SelectList(Enum.GetValues(typeof(Todo.Models.StatusTask))), "Select Status", new { @class = "form-select" })
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Task</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>