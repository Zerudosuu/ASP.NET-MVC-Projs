@model IEnumerable<Todo.Models.TodoTask>

@{
    ViewData["Title"] = "Task Dashboard";
    var ongoingTasks = Model.Where(t => t.Status == Todo.Models.StatusTask.Ongoing).ToList();
    var overdueTasks = Model.Where(t => t.Status == Todo.Models.StatusTask.Overdue).ToList();
    var completedTasks = Model.Where(t => t.Status == Todo.Models.StatusTask.Completed).ToList();
}

<div class="container mt-4">



    <h2 class="mb-4">📊 Task Dashboard</h2>

    <form>
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Search tasks..." aria-label="Search tasks"
                aria-describedby="button-search">
            <button class="btn btn-outline-secondary" type="button" id="button-search">Search</button>
        </div>
    </form>
    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-primary shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Ongoing</h5>
                    <p class="display-6">@ongoingTasks.Count</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-white bg-danger shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Overdue</h5>
                    <p class="display-6">@overdueTasks.Count</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-white bg-success shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Completed</h5>
                    <p class="display-6">@completedTasks.Count</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Button to trigger modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#todoModal">
        Add Task
    </button>


    <!-- Task Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-dark text-white">
            <h5 class="mb-0">All Tasks</h5>
        </div>
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Created At</th>
                        <th>Due Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model)
                    {
                        <tr>
                            <td>@task.Title</td>
                            <td>@task.Description</td>
                            <td>@task.CreatedAt.ToShortDateString()</td>
                            <td>@task.DueDate?.ToShortDateString()</td>
                            <td>
                                @if (task.Status == Todo.Models.StatusTask.Ongoing)
                                {
                                    <span class="badge bg-primary">Ongoing</span>
                                }
                                else if (task.Status == Todo.Models.StatusTask.Overdue)
                                {
                                    <span class="badge bg-danger">Overdue</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Completed</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-sm btn-info" onclick="ShowTaskDetailsModal(@task.Id)"> View </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div> </div>@await Html.PartialAsync("_CreateANewTaskModal", new Todo.Models.TodoTask())


<div class="modal fade" id="taskDetailsModal" tabindex="-1" aria-labelledby="taskDetailsLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">


        </div>
    </div>
</div>

@section Scripts {
    <script>
        const ShowTaskDetailsModal = (taskId) => {
            // Load partial view into modal
            $("#taskDetailsModal .modal-content").load("/Todo/Details/" + taskId, () => {

                // Bootstrap modal
                const modal = new bootstrap.Modal(document.getElementById("taskDetailsModal"));
                modal.show();

                // Now that content is loaded, grab the edit button
                const enableEdit = document.querySelector("#taskDetailsModal #enableEditBtn");

                if (enableEdit) {
                    enableEdit.addEventListener("click", () => {
                        console.log("Edit Clicked!");

                        // ✅ Here you can toggle form fields to editable
                        document.querySelectorAll("#taskDetailsModal input, #taskDetailsModal textarea").forEach(el => {
                            el.removeAttribute("readonly");

                            $("#editTaskForm select").prop("disabled", false);

                            $("#enableEditBtn").addClass("d-none");
                            $("#saveTaskBtn").removeClass("d-none");
                        });
                    });
                }
            });
        };
    </script>
}